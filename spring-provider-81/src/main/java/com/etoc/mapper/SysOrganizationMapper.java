package com.etoc.mapper;

import java.util.List;
import java.util.Map;

import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;

import com.etoc.model.SysOrganization;



@Mapper
public interface SysOrganizationMapper {
	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table sys_organization
	 * @mbg.generated  Tue Jun 26 17:03:42 CST 2018
	 */
	int deleteByPrimaryKey(String id);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table sys_organization
	 * @mbg.generated  Tue Jun 26 17:03:42 CST 2018
	 */
	int insert(SysOrganization record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table sys_organization
	 * @mbg.generated  Tue Jun 26 17:03:42 CST 2018
	 */
	int insertSelective(SysOrganization record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table sys_organization
	 * @mbg.generated  Tue Jun 26 17:03:42 CST 2018
	 */
	SysOrganization selectByPrimaryKey(String organizationId);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table sys_organization
	 * @mbg.generated  Tue Jun 26 17:03:42 CST 2018
	 */
	int updateByPrimaryKeySelective(SysOrganization record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table sys_organization
	 * @mbg.generated  Tue Jun 26 17:03:42 CST 2018
	 */
	int updateByPrimaryKey(SysOrganization record);

	
	//查询所有
	List<SysOrganization> selectSysOrganizations(@Param("available")String available);
	
	//查询组织树
	List<SysOrganization> selectSysOrganizationsTree(Map<String,Object> map);
	
	//分页查询组织结构
	List<SysOrganization> paging(Map<String,Object> query);
	
	//List查询
	List<SysOrganization> selectAll(Map<String,Object> map);
	
	//批量暂停组织结构
	int available(SysOrganization record);
	
	//添加或修改时根据父code获取并拼接父codes
	String selectParentCodes(@Param("code") String code);
	
	//获取最大的code
	Integer selectMaxCode();
	
	// 根据父机构id查询其子机构信息
	List<SysOrganization> getByFatherIdOrganization(@Param("parentCodes") String parentCodes);
	
}
