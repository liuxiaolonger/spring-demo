package com.etoc.mapper;

import java.util.List;
import java.util.Map;

import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;

import com.etoc.model.SysResource;



@Mapper
public interface SysResourceMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_resource
     *
     * @mbg.generated Wed Jun 27 15:55:59 CST 2018
     */
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_resource
     *
     * @mbg.generated Wed Jun 27 15:55:59 CST 2018
     */
    int insert(SysResource record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_resource
     *
     * @mbg.generated Wed Jun 27 15:55:59 CST 2018
     */
    int insertSelective(SysResource record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_resource
     *
     * @mbg.generated Wed Jun 27 15:55:59 CST 2018
     */
    SysResource selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_resource
     *
     * @mbg.generated Wed Jun 27 15:55:59 CST 2018
     */
    int updateByPrimaryKeySelective(SysResource record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_resource
     *
     * @mbg.generated Wed Jun 27 15:55:59 CST 2018
     */
    int updateByPrimaryKey(SysResource record);
    
    //查询资源管理信息分页
    List<SysResource> paging(Map<String,Object> query);
    
    //批量暂停资源
    int batchAvailable(Map<String,Object> map);
    
    //查询全部的资源信息
    List<SysResource> selectSysResources(Map<String, Object> map);
    
    //更具父类编码查询当前最大的子类编码
    String selectMaxSonCode(String parentCode);
    
  //根据userid进行查询资源信息列表
    List<SysResource> selectResourcesByUserId(String userId);
    
   //根据roleid进行查询资源信息
    List<SysResource> selectResourcesByRoleId(String roleId);
    
    //根据条件查询资源信息
    List<SysResource> selectResourcesByQuery(SysResource record);
    
    // 获取所有状态为不可用的资源
    List<SysResource> getNotResources(SysResource record);
    
    // 获取资源下的所有子资源
    List<SysResource> getNotSonResources(@Param("code")String code);
    
    // 去掉所有状态不可用的资源以及子资源，获取可用的资源
    List<SysResource> selectResourcesAll(@Param("listId")List<String> lsitId);
    
}