<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.longer.dao.mapper.SysOrganizationMapper">
	<resultMap id="BaseResultMap" type="com.longer.dao.model.SysOrganization">
		<id column="id" jdbcType="CHAR" property="id" />
		<result column="code" jdbcType="VARCHAR" property="code" />
		<result column="name" jdbcType="VARCHAR" property="name" />
		<result column="priority" jdbcType="INTEGER" property="priority" />
		<result column="parent_code" jdbcType="VARCHAR" property="parentCode" />
		<result column="parent_codes" jdbcType="VARCHAR" property="parentCodes" />
		<result column="available" jdbcType="VARCHAR" property="available" />
	</resultMap>
	<sql id="Base_Column_List">
		id, code, name, priority, parent_code,
		parent_codes, available
	</sql>
	<select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from sys_organization
		where id = #{id}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from
		sys_organization
		where id = #{id,jdbcType=CHAR}
	</delete>
	<insert id="insert" parameterType="com.longer.dao.model.SysOrganization">
		insert into
		sys_organization (id, code, name,priority,parent_code,parent_codes)
		values (#{id,jdbcType=CHAR},#{code,jdbcType=VARCHAR},#{name,jdbcType=VARCHAR},
		#{priority,jdbcType=INTEGER},#{parentCode,jdbcType=VARCHAR},#{parentCodes,jdbcType=VARCHAR} )
	</insert>
	<insert id="insertSelective" parameterType="com.longer.dao.model.SysOrganization">
		insert into sys_organization
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="code != null">
				code,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="priority != null">
				priority,
			</if>
			<if test="parentCode != null">
				parent_code,
			</if>
			<if test="parentCodes != null">
				parent_codes,
			</if>
			<if test="available != null">
				available,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=CHAR},
			</if>
			<if test="code != null">
				#{code,jdbcType=VARCHAR},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="priority != null">
				#{priority,jdbcType=INTEGER},
			</if>
			<if test="parentCode != null">
				#{parentCode,jdbcType=VARCHAR},
			</if>
			<if test="parentCodes != null">
				#{parentCodes,jdbcType=VARCHAR},
			</if>
			<if test="available != null">
				#{available,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.longer.dao.model.SysOrganization">
		update sys_organization
		<set>
			<if test="code != null">
				code = #{code,jdbcType=VARCHAR},
			</if>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="priority != null">
				priority = #{priority,jdbcType=INTEGER},
			</if>
			<if test="parentCode != null">
				parent_code = #{parentCode,jdbcType=VARCHAR},
			</if>
			<if test="parentCodes != null">
				parent_codes = #{parentCodes,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=CHAR}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.longer.dao.model.SysOrganization">
		<!-- WARNING - @mbg.generated This element is automatically generated by MyBatis Generator, do not modify. This element was generated on Tue Jun 26 17:03:42 CST 2018. -->
		update sys_organization
		set code = #{code,jdbcType=VARCHAR},
		name = #{name,jdbcType=VARCHAR},
		priority = #{priority,jdbcType=INTEGER},
		parent_code = #{parentCode,jdbcType=VARCHAR},
		parent_codes = #{parentCodes,jdbcType=VARCHAR},
		available = #{available,jdbcType=VARCHAR}
		where id = #{id,jdbcType=CHAR}
	</update>
	<!-- 查询全部组织结构 -->
	<select id="selectSysOrganizations" parameterType="java.lang.String" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from sys_organization
		<where>
			<if test="available != null">
				AND t.available = #{available}	
			</if>
		</where>
		order by code
	</select>
	
	<select id="selectSysOrganizationsTree" parameterType="java.util.Map" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from sys_organization t
		<where>
			<if test="available != null">
				AND t.available = #{available}	
				AND
				(select COUNT(*) from sys_organization s where FIND_IN_SET(s.`code`,REPLACE(t.parent_codes,'/',',')) and s.available = #{status} ) = #{available}
			</if>
		</where>
	</select>
	

	<!-- select id, code, name, priority, parent_code parentCode, parent_codes parentCodes, available from sys_organization -->
	<!-- 查询组织结构信息分页 -->
	<select id="paging" parameterType="java.util.Map" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from sys_organization
		<where>
			<if test="code != null">
				AND code like concat('%', #{code} ,'%')
			</if>
			<if test="name != null">
				AND name like concat('%', #{name} ,'%')
			</if>
			<if test="parentCode != null">
				AND parent_code = #{parentCode}
			</if>
			<if test="available != null">
				AND available = #{available}
			</if>
			<if test="id != null">
				AND id = #{id}	
			</if>
		</where>
		<choose>
		    <!-- 多字段排序 必须使用$符号和item,否则会自动给值加' '   -->
		    <when test="sort != null">
		       order by
		       <foreach collection="sort" item="s" separator=",">
		           ${s}
		       </foreach>
		    </when>
		    <otherwise>
		        <!-- 默认按照code升序排列 -->
		        order by code
		    </otherwise>
		</choose>
	</select>

	<!-- 批量暂停组织机构 -->
	<update id="available" parameterType="com.longer.dao.model.SysOrganization" >
		update sys_organization set available =#{available}
		where id = #{id}
	</update>

	<select id="selectParentCodes" parameterType="java.lang.String" resultType="java.lang.String">
		select
		CONCAT(parent_codes,"/",code) as code
		from sys_organization
		where code = #{code}
	</select>

	<select id="selectMaxCode" resultType="java.lang.Integer">
		select max(cast(a.code as SIGNED)) as code from sys_organization a
	</select>
	
	
	<select id="getByFatherIdOrganization" parameterType="java.lang.String" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from sys_organization
		where parent_codes like concat(#{parentCodes} ,'%') order by code
	</select>
		<!-- 全查询组织结构信息 参数全匹配 -->
	<select id="selectAll" parameterType="java.util.Map" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from sys_organization
		<where>
			<if test="code != null">
				AND code = #{code} 
			</if>
			<if test="name != null">
				AND name = #{name} 
			</if>
			<if test="parentCode != null">
				AND parent_code = #{parentCode}
			</if>
			<if test="parentCodeLike != null">
				AND parent_codes like concat(#{parentCodeLike} ,'%')
			</if>
			<if test="available != null">
				AND available = #{available}
			</if>
<!-- 			<if test="available == null">
				AND <![CDATA[ available = 'available']]>
			</if> -->
			<if test="id != null">
				AND id = #{id}	
			</if>
		</where>
		<choose>
		    <!-- 多字段排序 必须使用$符号和item,否则会自动给值加' '   -->
		    <when test="sort != null">
		       order by
		       <foreach collection="sort" item="s" separator=",">
		           ${s}
		       </foreach>
		    </when>
		    <otherwise>
		        <!-- 默认按照code升序排列 -->
		        order by code+0 
		    </otherwise>
		</choose>
			<if test="pageSize != null">
				limit #{pageSize}	
			</if>
	</select>
</mapper>